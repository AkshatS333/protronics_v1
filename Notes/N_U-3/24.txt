- we want to fetch products from database

- express has a router that we can use so we can put our routes in separate files
    because currently our routes are in server.js and we cant put more routes there
    as it will become very messy


- in backend folder create folder named as routes
    and create productRoutes.js and import express there
    and used express router functionality there



- import productRoutes in server.js to redirect if some related URL comes to it
    and used app.use there to redirect to productRoutes



- in productRoutes currently we are fetching products from file present in backend
    we need to fetch it from database
    fetching from database requires mongoose functions which are asynchronous and for that we require async/await
    but for elegant error handling we require either try/catch or async handler

    we can use readymade async handler but we will code with ourselves.




- for creating async handler
    create middleware folder in backend and in that new file asyncHandler.js



- import asyncHandler in productRoutes.js
    wrapped the get request with async and then with asyncHandler




- to get products from database we need to import productModel in productRoutes.js



- to get all products we pass in empty object within Product.find



- to test whether everything is working or not we ran the application and it ran also
    if we open any product then the url is like http://localhost:3000/product/648602c4ca4b3e32eb9e83e8
    here after product/ is the ID and it shows it is a ID generated by mongodb 

    also if we want some product that does not exist then
    I created a get request for single product with id=1 (that does not exist), and it has thrown an error


